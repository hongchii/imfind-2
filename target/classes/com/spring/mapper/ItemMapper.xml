<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.ItemMapper">
	<insert id="itemInsert">
		insert into LostPost
		(Lost_Title,
		Lost_Content,
		Lost_Up_File,
		Lost_Item,
		Lost_Re_Date,
		Lost_Date,
		Lost_Loc,
		Lost_Pay,
		Id,
		PayCode)values
		(#{Lost_Title},
		#{Lost_Content},
		#{Lost_Up_File},
		#{Lost_Item},
		now(),
		#{Lost_Date},
		#{Lost_Loc},
		#{Lost_Pay},
		#{Id},
		#{PayCode})
	</insert>

	<select id="getPayMember"
		resultType="com.spring.imfind.el.domain.MemberVO">
		SELECT id, Name, Contact, Email from Member
		WHERE id=#{id}
	</select>

	<insert id="insertPay">
		insert into Pay
		(PayCode,
		Pay_Amount,
		Pay_State,
		Pay_Date,
		Id)values
		(#{PayCode},
		#{Pay_Amount},
		#{Pay_State},
		#{Pay_Date},
		#{Id})
	</insert>

	<update id="updatePay" parameterType="PayVO">
		update Pay set Pay_State = #{Pay_State} where Id=#{Id} AND
		PayCode=#{PayCode}
	</update>

	<insert id="petInsert">
		insert into PetPost
		(Pet_Title,
		Pet_Content,
		pet_Name,
		pet_Re_Date,
		pet_LostDate,
		pet_Up_File,
		pet_Loc,
		pet_Pay,
		Id,
		PayCode)values
		(#{pet_Title},
		#{pet_Content},
		#{pet_Name},
		sysdate,
		#{pet_LostDate},
		#{pet_Up_File},
		#{pet_Loc},
		#{pet_Pay},
		#{Id},
		#{PayCode})
	</insert>
	<!-- 여기서 동적쿼리문으로 조건문 처리 -->
	<insert id="commentInsert" parameterType="LostComVO">
		<selectKey keyProperty="Com_Num" order="BEFORE"
			resultType="int">
			select nvl(max(Com_Num), 0)+1 from Re_Comment
		</selectKey>
		insert into Re_Comment (Com_Num, Lost_PostNum, Com_Content, Id,
		Com_Date, Secret_Com)
		values(#{Com_Num},#{Lost_PostNum},#{Com_Content},#{Id},sysdate,#{Secret_Com})
	</insert>

	<select id="commentList" parameterType="int"
		resultType="LostComVO">
		select * from Re_Comment where Lost_PostNum = #{Lost_PostNum} order by
		Com_Num desc
	</select>

	<select id="commentCount" resultType="int">
		select count(*) from Re_Comment
	</select>

	<update id="commentUpdate" parameterType="LostComVO">
		update Re_Comment set Com_Content = #{Com_Content} WHERE Com_Num =
		#{Com_Num}
	</update>

	<delete id="commentDelete" parameterType="int">
		{CALL
		BEGIN
		DELETE FROM re_comment WHERE com_num = #{com_num};
		DELETE FROM reply WHERE com_num = #{com_num};
		END
		}
	</delete>

	<!-- 동준 대댓글 -->
	<insert id="replyInsert" parameterType="replyVO">
		<selectKey keyProperty="re_num" order="BEFORE"
			resultType="int">
			select nvl(max(re_Num), 0)+1 from reply
		</selectKey>
		insert into reply (re_num,re_content,re_date,id,com_num,lost_postnum)
		values(#{re_num},#{re_content},sysdate,#{id},#{com_num},#{lost_postnum})
	</insert>

	<select id="replyList" resultType="replyVO">
		select * from reply order by re_num
	</select>
	<delete id="replyDelete">
		delete from reply where re_num = #{re_num}
	</delete>
	<update id="replyUpdate">
		update reply set re_Content = #{re_content} WHERE re_Num = #{re_num}
	</update>
	<!-- 동준 대댓글 끝 -->
	<insert id="pet_commentInsert" parameterType="LostComVO">
		<selectKey keyProperty="Com_Num" order="BEFORE"
			resultType="int">
			select nvl(max(Com_Num), 0)+1 from pet_Comment
		</selectKey>
		insert into pet_Comment (Com_Num, Lost_PostNum, Com_Content, Id,
		Com_Date, Secret_Com)
		values(#{Com_Num},#{Lost_PostNum},#{Com_Content},#{Id},sysdate,#{Secret_Com})
	</insert>

	<select id="pet_commentList" parameterType="int"
		resultType="LostComVO">
		select * from pet_Comment where Lost_PostNum = #{Lost_PostNum} order by
		Com_Num desc
	</select>

	<select id="pet_commentCount" resultType="int">
		select count(*) from pet_Comment
	</select>

	<update id="pet_commentUpdate" parameterType="LostComVO">
		update pet_Comment set Com_Content = #{Com_Content} WHERE Com_Num =
		#{Com_Num}
	</update>

	<delete id="pet_commentDelete" parameterType="int">
		{CALL
		BEGIN
		DELETE FROM pet_comment WHERE com_num = #{com_num};
		DELETE FROM pet_reply WHERE com_num = #{com_num};
		END
		}
	</delete>

	<!-- 동준 대댓글 -->
	<insert id="pet_replyInsert" parameterType="replyVO">
		<selectKey keyProperty="re_num" order="BEFORE"
			resultType="int">
			select nvl(max(re_Num), 0)+1 from pet_reply
		</selectKey>
		insert into pet_reply
		(re_num,re_content,re_date,id,com_num,Pet_PostNum)
		values(#{re_num},#{re_content},sysdate,#{id},#{com_num},#{pet_postnum})
	</insert>

	<select id="pet_replyList" resultType="replyVO">
		select * from pet_reply order by re_num
	</select>
	<delete id="pet_replyDelete">
		delete from pet_reply where re_num = #{re_num}
	</delete>
	<update id="pet_replyUpdate">
		update pet_reply set re_content = #{re_content} WHERE re_Num = #{re_num}
	</update>
	<!-- 동준 대댓글 끝 -->
	<!-- 인덱스페이지 사례금 상위 5개 -->
	<select id="gethighsetLostPay" resultType="ItemVO">
		select * from ( select * from lostpost order by lost_pay desc) where <![CDATA[ rownum <= 5 ]]>
	</select>
	<select id="gethighsetPetPay" resultType="PetVO">
		select * from ( select * from petpost order by pet_pay desc) where <![CDATA[ rownum <= 5 ]]>
	</select>


	<update id="addPayBoardNum" parameterType="ItemVO">
		update pay set lost_postnum = #{Lost_PostNum} where paycode = #{PayCode}
	</update>

	<select id="getPostNum" parameterType="ItemVO"
		resultType="ItemVO">
		SELECT lost_postnum from lostpost where paycode = #{PayCode}
	</select>

	<update id="addPayPetBoardNum" parameterType="PetVO">
		update pay set Pet_PostNum = #{Pet_PostNum} where paycode = #{PayCode}
	</update>

	<select id="getPetPostNum" parameterType="ItemVO"
		resultType="PetVO">
		SELECT Pet_PostNum from petpost where paycode = #{PayCode}
	</select>

	<select id="getCommentList" resultType="ComVO">
		select id, re_comment.com_content as re_content, com_date, com_num,
		lost_postnum from re_comment where re_comment.id = #{id}
		union
		select id, re_content, re_date as com_date, com_num, lost_postnum from
		(select re_comment.lost_postnum, reply.re_content, reply.re_date,
		reply.id, reply.com_num, reply.re_num
		from re_comment, reply
		where re_comment.com_num = reply.com_num and reply.id = #{id})
		where id =
		#{id}
	</select>

	<select id="getPetCommentList" resultType="ComVO">
		select id, pet_comment.com_content as re_content, com_date, com_num,
		lost_postnum from pet_comment where pet_comment.id =#{id}
		union
		select id, re_content, re_date as com_date, com_num, lost_postnum from
		(select pet_comment.lost_postnum, pet_reply.re_content,
		pet_reply.re_date, pet_reply.id, pet_reply.com_num, pet_reply.re_num
		from pet_comment, pet_reply
		where pet_comment.com_num = pet_reply.com_num and pet_reply.id = #{id})
		where id =#{id}
	</select>

	<delete id="deleteMember">
		DELETE FROM member WHERE id = #{id} and pw = #{pw}
	</delete>
	
	
	<!-- 좋아요기능 -->
	<insert id="like_plus">
		<selectKey keyProperty="likeno" order="BEFORE"
			resultType="int">
			select nvl(max(likeno), 0)+1 from liketo
		</selectKey>
		insert into liketo (likeno,lost_postnum,id)
		values(#{likeno},#{lost_PostNum},#{id})
	</insert>

	<delete id="like_cancel">
		delete from liketo WHERE id=#{id} AND lost_postnum=#{lost_PostNum}
	</delete>

	<select id="likeChk" resultType="ElVO">
		select * from liketo
	</select>
	<select id="likeCount" resultType="int">
		select count(*) from liketo where lost_postnum=#{lost_postnum}
	</select>
	<!-- 좋아요기능(pet) -->
	<insert id="pet_like_plus">
		<selectKey keyProperty="likeno" order="BEFORE"
			resultType="int">
			select nvl(max(likeno), 0)+1 from liketo
		</selectKey>
		insert into liketo (likeno,pet_postnum,id)
		values(#{likeno},#{Pet_PostNum},#{id})
	</insert>

	<delete id="pet_like_cancel">
		delete from liketo WHERE id=#{id} AND Pet_PostNum=#{Pet_PostNum}
	</delete>


	<select id="pet_likeCount" resultType="int">
		select count(*) from liketo where Pet_PostNum=#{Pet_PostNum}
	</select>

	<select id="getitem" resultType="ItemVO">

		select * from lostpost l,pay p where l.paycode=p.paycode and deal_state is
		null ORDER BY lost_re_date desc


	</select>
	<select id="getitem2" resultType="ItemVO">

		select * from lostpost l where
		paycode is null ORDER BY lost_re_date desc

	</select>


	<select id="getItemservice" resultType="ItemVO">
		select * from lostpost l,pay p where l.paycode=p.paycode and deal_state is
		null and lost_title like '%' || #{keyword} || '%' ORDER BY
		lost_re_date desc

	</select>
	<select id="getItemservice2" resultType="ItemVO">
		select * from lostpost where paycode is null and lost_title like '%' ||
		#{keyword} || '%' ORDER BY lost_re_date desc

	</select>
	<select id="getSido" resultType="ItemVO">

		select * from lostpost l,pay p where l.paycode=p.paycode and deal_state is
		null and replace(lost_loc,' ','') like #{lost_Loc} || '%' ORDER BY
		lost_re_date desc

	</select>
	<select id="getSido2" resultType="ItemVO">

		select * from lostpost where paycode is null and replace(lost_loc,' ','')
		like #{lost_Loc} || '%' ORDER BY lost_re_date desc

	</select>
	<select id="getdata_info" resultType="ItemVO">
		SELECT * from lostpost where lost_postnum = #{lost_PostNum}

	</select>
	<update id="update_data">
		update lostpost set
		lost_title=#{Lost_Title},lost_Content=#{Lost_Content},lost_date=#{Lost_Date},lost_loc=#{Lost_Loc},lost_Up_File=#{Lost_Up_File},lost_item=#{Lost_Item}
		where lost_postnum = #{lost_PostNum}


	</update>
	<delete id="delete_data">

		{CALL
		BEGIN
		delete from lostpost where lost_postnum = #{lost_PostNum};
		DELETE FROM re_comment WHERE lost_postnum = #{lost_PostNum};
		DELETE FROM reply WHERE lost_postnum = #{lost_PostNum};
		DELETE FROM liketo WHERE lost_postnum = #{lost_PostNum};
		END
		}

	</delete>


	<!-- 유희 -->
	<select id="getItembyDate" resultType="IndexLostPostDTO">
		SELECT
		LOST_POSTNUM,
		LOST_TITLE,
		LOST_CONTENT,
		LOST_UP_FILE,
		LOST_PAY,
		LOST_ITEM,
		LOST_LOC,
		LOST_DATE, ID,
		(SELECT COUNT(*) AS cnt FROM re_comment WHERE lostpost.lost_postnum =
		re_comment.lost_postnum) as CommentTotalCnt
		FROM lostpost
		WHERE <![CDATA[ rownum < 15 ]]>
		ORDER BY lost_date
	</select>
	<!-- 유희 -->
	<select id="getPetItembyDate" resultType="IndexLostPostDTO">
		SELECT
		PET_POSTNUM,
		PET_TITLE,
		PET_CONTENT,
		PET_UP_FILE,
		PET_PAY,
		PET_LOC,
		PET_LOSTDATE, ID,
		(SELECT COUNT(*) AS cnt FROM pet_comment WHERE petpost.PET_POSTNUM =
		pet_comment.lost_postnum) as CommentTotalCnt
		FROM petpost
		WHERE <![CDATA[ rownum < 15 ]]>
		ORDER BY PET_LOSTDATE
	</select>

	<!-- PET -->
	<select id="getPet" resultType="PetVO">
		select * from petpost l,pay p where l.paycode=p.paycode and deal_state is
		null ORDER BY pet_re_date desc
	</select>
	<select id="getPetservice" resultType="PetVO">
		select * from petpost l,pay p where l.paycode=p.paycode and deal_state is
		null and pet_title like '%' || #{keyword} || '%' ORDER BY pet_re_date
		desc
	</select>
	<select id="getPetSido" resultType="PetVO">
		select * from petpost l,pay p where l.paycode=p.paycode and deal_state is
		null and replace(pet_loc,' ','') like #{pet_Loc} || '%' ORDER BY
		pet_re_date desc
	</select>
	<select id="getPet2" resultType="PetVO">
		select * from petpost l where paycode is null ORDER BY pet_re_date desc
	</select>
	<select id="getPetservice2" resultType="PetVO">
		select * from petpost where paycode is null and pet_title like '%' ||
		#{keyword} || '%' ORDER BY pet_re_date desc
	</select>
	<select id="getPetSido2" resultType="PetVO">
		select * from petpost where paycode is null and replace(pet_loc,' ','') like
		#{pet_Loc} || '%' ORDER BY pet_re_date desc
	</select>
	<delete id="petdelete_data">

		{CALL
		BEGIN
		delete from petpost where pet_postnum = #{Pet_PostNum};
		DELETE FROM pet_comment where lost_postnum = #{Pet_PostNum};
		DELETE FROM pet_reply where pet_postnum = #{Pet_PostNum};
		DELETE FROM liketo where pet_postnum = #{Pet_PostNum};
		END
		}
	</delete>
	<select id="getpetdata_info" resultType="PetVO">
		SELECT * from petpost where pet_postnum = #{Pet_PostNum}
	</select>
	<update id="petupdate_data">
		update petpost set
		pet_title=#{Pet_Title},pet_Content=#{Pet_Content},pet_lostdate=#{Pet_LostDate},pet_loc=#{Pet_Loc},pet_Up_File=#{Pet_Up_File},pet_name=#{Pet_Name}
		where pet_postnum = #{Pet_PostNum}
	</update>
	<select id="lost_pay_rank" resultType="ItemVO">
		SELECT *
		FROM ( SELECT
		l.lost_postnum,l.lost_title,l.lost_up_file,l.lost_loc,p.pay_amount
		lost_pay,l.lost_re_date lost_date, l.id
		FROM lostpost l, pay p where l.paycode = p.paycode
		ORDER BY p.pay_amount desc,l.lost_postnum desc
		)
		WHERE rownum=1

	</select>
	<select id="pet_pay_rank" resultType="PetVO">
		SELECT *
		FROM ( SELECT
		l.pet_postnum,l.pet_title,l.pet_up_file,l.pet_loc,p.pay_amount
		pet_pay,l.pet_re_date pet_lostdate, l.id
		FROM petpost l, pay p where l.paycode = p.paycode
		ORDER BY p.pay_amount desc,l.pet_postnum desc
		)
		WHERE rownum=1

	</select>
	<select id="lost_like_rank" resultType="int">
		SELECT lost_postnum
		FROM ( select lost_postnum ,count(lost_postnum)as count from liketo group
		by lost_postnum order by count desc
		)
		WHERE rownum=1

	</select>
	<select id="pet_like_rank" resultType="int">
		SELECT pet_postnum
		FROM ( select pet_postnum ,count(pet_postnum)as count from liketo group by
		pet_postnum order by count desc
		)
		WHERE rownum=1

	</select>

</mapper>